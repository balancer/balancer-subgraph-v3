// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class RateProviders extends ethereum.SmartContract {
  static bind(address: Address): RateProviders {
    return new RateProviders("RateProviders", address);
  }

  getRateProviders(): Array<Address> {
    let result = super.call(
      "getRateProviders",
      "getRateProviders():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getRateProviders(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRateProviders",
      "getRateProviders():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}
