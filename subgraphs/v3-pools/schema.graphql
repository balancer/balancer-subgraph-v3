enum PoolType {
  Weighted
  Stable
  LBPool
}

type Factory @entity {
  "Unique identifier for the Factory"
  id: Bytes!
  "Address of the Factory contract"
  address: Bytes!
  "Type of pools this Factory creates"
  type: PoolType!
  "Version number of the Factory"
  version: Int!
  "Pools created by this Factory"
  pools: [Pool!] @derivedFrom(field: "factory")
}

type WeightedParams @entity {
  "Unique identifier for the WeightedPoolParams"
  id: Bytes!
  "Token weights for Weighted Pools"
  weights: [BigDecimal!]!
}

type StableParams @entity {
  "Unique identifier for the StablePoolParams"
  id: Bytes!
  "Amplification parameter for Stable Pools"
  amp: BigInt!
}

type LbpParams @entity {
  "Unique identifier for the LBPoolParams"
  id: Bytes!
  "Start time for a gradual weight update"
  startTime: BigInt!
  "End time for a gradual weight update"
  endTime: BigInt!
  "Start weights for a gradual weight update"
  startWeights: [BigDecimal!]!
  "End weights for a gradual weight update"
  endWeights: [BigDecimal!]!
  "Indicates whether the pool is currently allowing swaps"
  swapEnabledInternal: Boolean
}

type Pool @entity {
  "Unique identifier for the Pool"
  id: Bytes!
  "Address of the Pool contract"
  address: Bytes!
  "Factory that created this Pool"
  factory: Factory!
  "Parameters for Weighted pools (null for other pool types)"
  weightedParams: WeightedParams
  "Parameters for Stable pools (null for other pool types)"
  stableParams: StableParams
  "Parameters for LBPools (null for other pool types)"
  lbpParams: LbpParams
}
